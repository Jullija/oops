type Mutation {
    addBonusMutation(chestHistoryId: Int!,
        awardId: Int!): AddBonusReturnType

    addPointsMutation (studentId: Int!,
        teacherId: Int!,
        value: Float!,
        subcategoryId: Int!): PointsType
}

type Query {
    getUsersInGroupWithPoints(groupId: Int!): [UserPointsType]
    getStudentPoints(studentId: Int!, editionId: Int!): StudentPointsType
    getSumOfPointsForStudentByCategory(studentId: Int!, editionId: Int!): [CategoryPointsSumType]
}

type CategoryPointsSumType{
    category: CategoriesType
    sumOfPurePoints: Float
    sumOfBonuses: Float
    sumOfAll: Float
    maxPoints: Float
}

type StudentPointsType{
    user: UsersType
    subcategoryPoints: [SubcategoryPointsType]
    sumOfPurePoints: Float
    sumOfBonuses: Float
    sumOfAll: Float
}

type AddBonusReturnType {
    bonus: BonusType
    points: PointsType
}

type UserPointsType {
    user: UsersType
    categoriesPoints: [CategoryPointsType]
}

type CategoryAggregate {
    category: CategoriesType
    sumOfPurePoints: Float
    sumOfBonuses: Float
    sumOfAll: Float
}


type CategoryPointsType {
    category: CategoriesType
    subcategoryPoints: [SubcategoryPointsType]
    aggregate: CategoryAggregate
}

type SubcategoryPointsType {
    subcategory: SubcategoriesType
    points: PurePointsType
}

type PurePointsType {
    purePoints: PointsType
    partialBonusType: [PartialBonusType]
}

type PartialBonusType {
    bonuses: BonusType
    partialValue: Float
}



type BonusType {
    bonusId: Int!
    points: PointsType!
    award: AwardType!
    chestHistory: ChestHistoryType!
    label: String!
    createdAt: String!
    updatedAt: String!
}

type PointsType {
    pointsId: Int!
    student: UsersType!
    teacher: UsersType!
    value: Float!
    subcategory: SubcategoriesType!
    label: String!
    createdAt: String!
    updatedAt: String!
}

type AwardType {
    awardId: Int!
    awardName: String!
    image_file_id: Int
    awardType: AwardTypeType!
    maxUsages: Int!
    label: String!
}

type SubcategoriesType {
    subcategoryId: Int!
    subcategoryName: String!
    maxPoints: Int!
    ordinalNumber: Int!
    category: CategoriesType!
    edition: EditionType!
    label: String!
}

type ChestHistoryType {
    chestHistoryId: Int!
    user: UsersType!
    teacher: UsersType!
    chest: ChestType!
    subcategory: SubcategoriesType!
    label: String!
    createdAt: String!
    updatedAt: String!
}

type ChestType {
    chestId: Int!
    chestType: String!
    image_file_id: Int
    label: String!
    edition: EditionType!
}

type CategoriesType {
    categoryId: Int!
    categoryName: String!
    label: String!
}

type EditionType {
    editionId: Int!
    editionName: String!
    editionYear: Int!
    label: String!
}

type GroupType {
    groups_id: ID!
    group_name: String!
    label: String
    users: [UsersType!]!
    weekday: String!
    start_time: String!
    end_time: String!
}

type UsersType {
    userId: Int!
    indexNumber: Int!
    nick: String!
    firstName: String!
    secondName: String!
    role: UsersRolesType!
    label: String!
    groups: [GroupType!]!
    image_file_id: Int
}

type UserGroupType {
    user_id: ID!
    group_id: ID!
}


enum UsersRolesType {
    STUDENT
    TEACHER
    COORDINATOR
}

enum AwardTypeType {
    ADDITIVE_NEXT
    ADDITIVE_PREV
    ADDITIVE
    MULTIPLICATIVE
}
